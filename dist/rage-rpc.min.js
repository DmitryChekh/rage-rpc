!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?exports=r():e.rpc=r()}("undefined"!=typeof self?self:this,(()=>(()=>{"use strict";var e={d:(r,t)=>{for(var n in t)e.o(t,n)&&!e.o(r,n)&&Object.defineProperty(r,n,{enumerable:!0,get:t[n]})}};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),e.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),e.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};e.r(r),e.d(r,{call:()=>E,callBrowser:()=>L,callBrowsers:()=>S,callClient:()=>O,callServer:()=>$,default:()=>D,off:()=>N,on:()=>T,register:()=>B,setDebugMode:()=>o,trigger:()=>J,triggerBrowser:()=>I,triggerBrowsers:()=>U,triggerClient:()=>V,triggerServer:()=>q,unregister:()=>k});var t=function(e){return e.Blip="b",e.Checkpoint="cp",e.Colshape="c",e.Label="l",e.Marker="m",e.Object="o",e.Pickup="p",e.Player="pl",e.Vehicle="v",e}(t||{});let n=!1;function o(e){n=e}function c(e,r){const n="client"===i();if(e&&"object"==typeof e&&void 0!==e.id){const o=(r,t,o)=>n?e.type===r&&t.at(e.id)===e:e instanceof o;switch(r){case t.Blip:return o("blip",mp.blips,mp.Blip);case t.Checkpoint:return o("checkpoint",mp.checkpoints,mp.Checkpoint);case t.Colshape:return o("colshape",mp.colshapes,mp.Colshape);case t.Label:return o("textlabel",mp.labels,mp.TextLabel);case t.Marker:return o("marker",mp.markers,mp.Marker);case t.Object:return o("object",mp.objects,mp.Object);case t.Pickup:return o("pickup",mp.pickups,mp.Pickup);case t.Player:return o("player",mp.players,mp.Player);case t.Vehicle:return o("vehicle",mp.vehicles,mp.Vehicle)}}return!1}function s(){const e=46656*Math.random()|0,r=46656*Math.random()|0;return("000"+e.toString(36)).slice(-3)+("000"+r.toString(36)).slice(-3)}function i(){return mp.joaat?"server":mp.game&&mp.game.joaat?"client":mp.trigger?"cef":void 0}function l(e){const r=i();return JSON.stringify(e,((e,n)=>{if("client"===r||"server"===r&&n&&"object"==typeof n){let e;if(c(n,t.Blip)?e=t.Blip:c(n,t.Checkpoint)?e=t.Checkpoint:c(n,t.Colshape)?e=t.Colshape:c(n,t.Marker)?e=t.Marker:c(n,t.Object)?e=t.Object:c(n,t.Pickup)?e=t.Pickup:c(n,t.Player)?e=t.Player:c(n,t.Vehicle)&&(e=t.Vehicle),e)return{__t:e,i:"number"==typeof n.remoteId?n.remoteId:n.id}}return n}))}function a(e,r){return"number"==typeof r?Promise.race([new Promise(((e,t)=>{setTimeout((()=>t("TIMEOUT")),r)})),e]):e}function p(e){try{e.url}catch(e){return!1}return!0}const g=i();if(!g)throw"Unknown RAGE environment";const m="PROCEDURE_NOT_FOUND",u=!1,h="__rpc:id",f="__rpc:process",w="__rpc:browserRegister",d="__rpc:browserUnregister",_="__rpc:triggerEvent",v="__rpc:triggerEventBrowsers",b="cef"===g?window:e.g;if(!b[f])try{if(b.__rpcListeners={},b.__rpcPending={},b.__rpcEvListeners={},b[f]=(e,r)=>{"server"!==g&&(r=e);const n=function(e){const r=i();return JSON.parse(e,((e,n)=>{if(("client"===r||"server"===r)&&n&&"object"==typeof n&&"string"==typeof n.__t&&"number"==typeof n.i&&2===Object.keys(n).length){const e=n.i;let o;switch(n.__t){case t.Blip:o=mp.blips;break;case t.Checkpoint:o=mp.checkpoints;break;case t.Colshape:o=mp.colshapes;break;case t.Label:o=mp.labels;break;case t.Marker:o=mp.markers;break;case t.Object:o=mp.objects;break;case t.Pickup:o=mp.pickups;break;case t.Player:o=mp.players;break;case t.Vehicle:o=mp.vehicles}if(o)return o["client"===r?"atRemoteId":"at"](e)}return n}))}(r);if(n.req){const r={id:n.id,environment:n.fenv||n.env};"server"===g&&(r.player=e);const t={ret:1,id:n.id,env:g};let o;switch(g){case"server":o=e=>r.player.call(f,[l(e)]);break;case"client":if("server"===n.env)o=e=>mp.events.callRemote(f,l(e));else if("cef"===n.env){const e=n.b&&b.__rpcBrowsers[n.b];r.browser=e,o=r=>e&&p(e)&&y(e,r,!0)}break;case"cef":o=e=>mp.trigger(f,l(e))}if(o){const e=P(n.name,n.args,r);n.noRet||e.then((e=>o({...t,res:e}))).catch((e=>o({...t,err:e||null})))}}else if(n.ret){const r=b.__rpcPending[n.id];if("server"===g&&r.player!==e)return;r&&(r.resolve(n.hasOwnProperty("err")?Promise.reject(n.err):Promise.resolve(n.res)),delete b.__rpcPending[n.id])}},"cef"!==g){if(mp.events.add(f,b[f]),"client"===g){B("__rpc:callServer",(([e,r,t],n)=>j(e,r,{fenv:n.environment,noRet:t}))),B("__rpc:callBrowsers",(([e,r,t],n)=>C(null,e,r,{fenv:n.environment,noRet:t}))),b.__rpcBrowsers={};const e=e=>{const r=s();Object.keys(b.__rpcBrowsers).forEach((r=>{const t=b.__rpcBrowsers[r];t&&p(t)&&t!==e||(u&&mp.console.logError(`initBrowser: delete OK: ${r}`),delete b.__rpcBrowsers[r])})),b.__rpcBrowsers[r]=e,u&&mp.console.logError(`initBrowser: new Browser found: ${r}`),e.execute(`\n                    window.name = '${r}';\n                    if(typeof window['${h}'] === 'undefined'){\n                        window['${h}'] = Promise.resolve(window.name);\n                    }else{\n                        window['${h}:resolve'](window.name);\n                    }\n                `)};mp.browsers.forEach(e),mp.events.add("browserCreated",e),b.__rpcBrowserProcedures={},mp.events.add(w,(e=>{const[r,t]=JSON.parse(e);b.__rpcBrowserProcedures[t]=r})),mp.events.add(d,(e=>{const[r,t]=JSON.parse(e);b.__rpcBrowserProcedures[t]===r&&delete b.__rpcBrowserProcedures[t]})),B(v,(([e,r],t)=>{Object.keys(b.__rpcBrowsers).forEach((n=>{const o=b.__rpcBrowsers[n];u&&mp.console.logError(`register name: ${e}`),o&&p(o)?x(o,_,[e,r],{fenv:t.environment,noRet:1}):(u&&mp.console.logError(`key NOT deleted: ${n}`),delete b.__rpcBrowsers[n])}))}))}}else void 0===b[h]&&(b[h]=new Promise((e=>{window.name?e(window.name):b[h+":resolve"]=e})));B(_,(([e,r],t)=>M(e,r,t)))}catch(e){u&&mp.console.logError(`catch !glob[PROCESS_EVENT]: ${e}`)}function y(e,r,t){try{const n=l(r);e.execute(`var process = window["${f}"]; if(process){ process(${JSON.stringify(n)}); }else{ ${t?"":`mp.trigger("${f}", '{"ret":1,"id":"${r.id}","err":"${m}","env":"cef"}');`} }`)}catch(e){u&&mp.console.logError(`catch passEventToBrowser: ${e}: ${r.id}`)}}function P(e,r,t){try{const n=b.__rpcListeners[e];return n?Promise.resolve(n(r,t)):Promise.reject(m)}catch(e){u&&mp.console.logError(`catch callProcedure: ${e}`)}}function B(e,r){try{if(2!==arguments.length)throw'register expects 2 arguments: "name" and "cb"';return"cef"===g&&b[h].then((r=>mp.trigger(w,JSON.stringify([r,e])))),b.__rpcListeners[e]=r,()=>k(e)}catch(e){u&&mp.console.logError(`catch register: ${e}`)}}function k(e){try{if(1!==arguments.length)throw'unregister expects 1 argument: "name"';"cef"===g&&b[h].then((r=>mp.trigger(d,JSON.stringify([r,e])))),b.__rpcListeners[e]=void 0,u&&mp.console.logError(`OK: unregister: ${e}`)}catch(e){u&&mp.console.logError(`catch unregister: ${e}`)}}function E(e,r,t={}){try{return arguments.length<1||arguments.length>3?Promise.reject('call expects 1 to 3 arguments: "name", optional "args", and optional "options"'):a(P(e,r,{environment:g}),t.timeout)}catch(e){u&&mp.console.logError(`catch call: ${e}`)}}function j(e,r,t={}){try{switch(g){case"server":return E(e,r);case"client":{const n=s();return new Promise((o=>{t.noRet||(b.__rpcPending[n]={resolve:o});const c={req:1,id:n,name:e,env:g,args:r,...t};mp.events.callRemote(f,l(c))}))}case"cef":return O("__rpc:callServer",[e,r,+t.noRet])}}catch(e){u&&mp.console.logError(`catch _callServer: ${e}`)}}function $(e,r,t={}){try{if(arguments.length<1||arguments.length>3)return Promise.reject('callServer expects 1 to 3 arguments: "name", optional "args", and optional "options"');let n={};return t.noRet&&(n.noRet=1),a(j(e,r,n),t.timeout)}catch(e){u&&mp.console.logError(`catch callServer: ${e}`)}}function R(e,r,t,n={}){try{switch(g){case"client":return E(r,t);case"server":{const o=s();return new Promise((c=>{n.noRet||(b.__rpcPending[o]={resolve:c,player:e});const s={req:1,id:o,name:r,env:g,args:t,...n};e.call(f,[l(s)])}))}case"cef":{const e=s();return b[h].then((o=>new Promise((c=>{n.noRet||(b.__rpcPending[e]={resolve:c});const s={b:o,req:1,id:e,name:r,env:g,args:t,...n};mp.trigger(f,l(s))}))))}}}catch(e){u&&mp.console.logError(`catch _callClient: ${e}`)}}function O(e,r,t,n={}){try{switch(g){case"client":if(n=t||{},t=r,r=e,e=null,arguments.length<1||arguments.length>3||"string"!=typeof r)return Promise.reject('callClient from the client expects 1 to 3 arguments: "name", optional "args", and optional "options"');break;case"server":if(arguments.length<2||arguments.length>4||"object"!=typeof e)return Promise.reject('callClient from the server expects 2 to 4 arguments: "player", "name", optional "args", and optional "options"');break;case"cef":if(n=t||{},t=r,r=e,e=null,arguments.length<1||arguments.length>3||"string"!=typeof r)return Promise.reject('callClient from the browser expects 1 to 3 arguments: "name", optional "args", and optional "options"')}let o={};return n.noRet&&(o.noRet=1),a(R(e,r,t,o),n.timeout)}catch(e){u&&mp.console.logError(`catch callClient: ${e}`)}}function x(e,r,t,n={}){try{return new Promise((o=>{const c=s();n.noRet||(b.__rpcPending[c]={resolve:o}),y(e,{req:1,id:c,name:r,env:g,args:t,...n},!1)}))}catch(e){u&&mp.console.logError(`catch _callBrowser: ${e}`)}}function C(e,r,t,n={}){try{switch(g){case"client":const o=b.__rpcBrowserProcedures[r];if(!o)return Promise.reject(m);const c=b.__rpcBrowsers[o];return c&&p(c)?x(c,r,t,n):Promise.reject(m);case"server":return R(e,"__rpc:callBrowsers",[r,t,+n.noRet],n);case"cef":return R(null,"__rpc:callBrowsers",[r,t,+n.noRet],n)}}catch(e){u&&mp.console.logError(`catch _callBrowsers: ${e}`)}}function S(e,r,t,n={}){try{let o,c={};switch(g){case"client":case"cef":if(n=t||{},t=r,r=e,arguments.length<1||arguments.length>3)return Promise.reject('callBrowsers from the client or browser expects 1 to 3 arguments: "name", optional "args", and optional "options"');n.noRet&&(c.noRet=1),o=C(null,r,t,c);break;case"server":if(arguments.length<2||arguments.length>4)return Promise.reject('callBrowsers from the server expects 2 to 4 arguments: "player", "name", optional "args", and optional "options"');n.noRet&&(c.noRet=1),o=C(e,r,t,c)}if(o)return a(o,n.timeout)}catch(e){u&&mp.console.logError(`catch callBrowsers: ${e}`)}}function L(e,r,t,n={}){try{if("client"!==g)return Promise.reject("callBrowser can only be used in the client environment");if(arguments.length<2||arguments.length>4)return Promise.reject('callBrowser expects 2 to 4 arguments: "browser", "name", optional "args", and optional "options"');let o={};return n.noRet&&(o.noRet=1),a(x(e,r,t,o),n.timeout)}catch(e){u&&mp.console.logError(`catch callBrowser: ${e}`)}}function M(e,r,t){try{const n=b.__rpcEvListeners[e];n&&n.forEach((e=>e(r,t)))}catch(e){u&&mp.console.logError(`catch callEvent: ${e}`)}}function T(e,r){try{if(2!==arguments.length)throw'on expects 2 arguments: "name" and "cb"';const t=b.__rpcEvListeners[e]||new Set;return t.add(r),b.__rpcEvListeners[e]=t,()=>N(e,r)}catch(e){u&&mp.console.logError(`catch on: ${e}`)}}function N(e,r){try{if(2!==arguments.length)throw'off expects 2 arguments: "name" and "cb"';const t=b.__rpcEvListeners[e];t&&t.delete(r)}catch(e){u&&mp.console.logError(`catch off: ${e}`)}}function J(e,r){try{if(arguments.length<1||arguments.length>2)throw'trigger expects 1 or 2 arguments: "name", and optional "args"';M(e,r,{environment:g})}catch(e){u&&mp.console.logError(`catch trigger: ${e}`)}}function V(e,r,t){try{switch(g){case"client":if(t=r,r=e,e=null,arguments.length<1||arguments.length>2||"string"!=typeof r)throw'triggerClient from the client expects 1 or 2 arguments: "name", and optional "args"';break;case"server":if(arguments.length<2||arguments.length>3||"object"!=typeof e)throw'triggerClient from the server expects 2 or 3 arguments: "player", "name", and optional "args"';break;case"cef":if(t=r,r=e,e=null,arguments.length<1||arguments.length>2||"string"!=typeof r)throw'triggerClient from the browser expects 1 or 2 arguments: "name", and optional "args"'}R(e,_,[r,t],{noRet:1})}catch(e){u&&mp.console.logError(`catch triggerClient: ${e}`)}}function q(e,r){try{if(arguments.length<1||arguments.length>2)throw'triggerServer expects 1 or 2 arguments: "name", and optional "args"';j(_,[e,r],{noRet:1})}catch(e){u&&mp.console.logError(`catch triggerServer: ${e}`)}}function U(e,r,t){try{switch(g){case"client":case"cef":if(t=r,r=e,e=null,arguments.length<1||arguments.length>2)throw'triggerBrowsers from the client or browser expects 1 or 2 arguments: "name", and optional "args"';break;case"server":if(arguments.length<2||arguments.length>3)throw'triggerBrowsers from the server expects 2 or 3 arguments: "player", "name", and optional "args"'}R(e,v,[r,t],{noRet:1})}catch(e){u&&mp.console.logError(`catch triggerBrowsers: ${e}`)}}function I(e,r,t){try{if("client"!==g)throw"callBrowser can only be used in the client environment";if(arguments.length<2||arguments.length>4)throw'callBrowser expects 2 or 3 arguments: "browser", "name", and optional "args"';x(e,_,[r,t],{noRet:1})}catch(e){u&&mp.console.logError(`catch triggerBrowser: ${e}`)}}const D={register:B,unregister:k,call:E,callServer:$,callClient:O,callBrowsers:S,callBrowser:L,on:T,off:N,trigger:J,triggerServer:q,triggerClient:V,triggerBrowsers:U,triggerBrowser:I};return r})()));